version: '3.7'

services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
    # Run in dev Mode: npm run start:dev
    command: npm run start:dev
    ports:
      - 8080:8080
    depends_on:
      - postgres
      - minio

  postgres:
    image: postgres
#    networks:
#      - postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5433:5432'

#  pgadmin:
#    image: dpage/pgadmin4:6.18
#    networks:
#      - postgres
#    ports:
#      - "8081:80"
#    volumes:
#      - .:/root/.pgadmin
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_PORT=${POSTGRES_PORT}
#      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
#      - PGADMIN_DEFAULT_PASSWORD=admin
#    depends_on:
#      - postgres
#      - api

  minio:
    image: bitnami/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_DEFAULT_BUCKETS=${MINIO_BUCKET}:public
    volumes:
      - minio-volume:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

volumes:
  postgres:
  minio-volume:
    external: true

#
#networks:
#  postgres:
#    driver: bridge
